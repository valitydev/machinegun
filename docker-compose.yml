services:

  testrunner:
    image: $DEV_IMAGE_TAG
    build:
      dockerfile: Dockerfile.dev
      context: .
      args:
        OTP_VERSION: $OTP_VERSION
        THRIFT_VERSION: $THRIFT_VERSION
    volumes:
      - .:$PWD
    hostname: $SERVICE_NAME
    working_dir: $PWD
    depends_on:
      riakdb:
        condition: service_started
      member1:
        condition: service_started
      member2:
        condition: service_started
      kafka1:
        condition: service_healthy
      consul0:
        condition: service_started
      consul1:
        condition: service_started
      consul2:
        condition: service_started
      jaeger:
        condition: service_started
    ports:
      - "8022"
    command: /sbin/init

  riakdb: &member-node
    image: docker.io/basho/riak-kv:${RIAK_VERSION}
    environment:
      - CLUSTER_NAME=riakkv
      - COORDINATOR_NODE=riakdb
    labels:
      - "com.basho.riak.cluster.name=riakkv"
    volumes:
      - ./test_resources/riak_user.conf:/etc/riak/user.conf:ro
      - schemas:/etc/riak/schemas
  member1:
    <<: *member-node
    links:
      - riakdb
    depends_on:
      - riakdb
  member2:
    <<: *member-node
    links:
      - riakdb
    depends_on:
      - riakdb

  zookeeper:
    image: docker.io/confluentinc/cp-zookeeper:${ZOOKEEPER_VERSION}
    healthcheck:
      test: echo ruok | nc 127.0.0.1 2181 || exit -1
      interval: 5s
      timeout: 240s #🍎
      retries: 50
    environment:
      KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=ruok"
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka1: &kafka-broker
    image: docker.io/wurstmeister/kafka:${KAFKA_VERSION}
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--list", "--zookeeper", "zookeeper:2181"]
      interval: 5s
      timeout: 10s
      retries: 5
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: OUTSIDE://kafka1:9092
      KAFKA_LISTENERS: OUTSIDE://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: OUTSIDE
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'

  consul1: &consul-server
    image: docker.io/consul:${CONSUL_VERSION}
    volumes:
      - ./test_resources/consul.json:/etc/consul/consul.json
    hostname: consul1
    command:
      agent -server -config-dir=/etc/consul

  consul2:
    <<: *consul-server
    hostname: consul2

  consul0:
    <<: *consul-server
    hostname: consul0

  jaeger:
    image: jaegertracing/all-in-one:1.47
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    healthcheck:
      test: "/go/bin/all-in-one-linux status"
      interval: 2s
      timeout: 1s
      retries: 20
    ports:
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP http receiver
      - 5778:5778
      - 14250:14250
      - 16686:16686

volumes:
  schemas:
    external: false
